package day5;

public class Constructor {
    public static void main(String[] args) {

        // 객체 초기화의 실수를 줄이기 위해 생성자를 사용해서 만듦
        // 생성자 초기화를 해주지 않으면, 오류가 떠서 프로그램 작동 x
        사람 a사람1 = new 사람(20,"홍길동","서울");

        //객체의 데이터 세팅 → 객체 초기화
        a사람1.나이 = 20;
        a사람1.이름 = "홍길동";
        a사람1.거주지 = "서울";

        a사람1.자기소개();
        // 객체가 올바르게 작동하는 데이터가 반드시 필요하다.
        // 나이, 이름 세팅 안 해줄 시 출력값 : 안녕하세요 저는 0살 null입니다. > 실행은 됨
        System.out.println();

        // 사람을 만들때마다 데이터 세팅을 새로 해줘야 하는 불편함이 있음.
        사람 a사람2 = new 사람(30,"홍길순","부산");

        //객체의 데이터 세팅 → 객체 초기화
        a사람2.나이 = 30;
        a사람2.이름 = "홍길순";
        a사람2.거주지 = "부산";

        a사람2.자기소개();
        System.out.println();

        //상단과 같은 것이지만 한 줄로 가능함
        a사람1.초기화();
        a사람1.자기소개();
        System.out.println();

        a사람2.초기화2();
        a사람2.자기소개();
        System.out.println();

        // 초기화를 조금 더 편하게 하려면?
        // 객체 초기화는 꼭 필요한데 실수로 누락할 수 있다.
        // 이를 극복하기 위해 생성자 초기화 필요
        a사람1. 초기화1(20,"홍길동","서울");
        a사람1. 자기소개();

        a사람2. 초기화1(30,"홍길순","부산");
        a사람2. 자기소개();

    }
}

class 사람 {
    int 나이;
    String 이름;

    String 거주지;

    // 생성자 : 객체가 생성될 때 자동으로 호출되는 메서드
    // 작성규칙 : 리턴타입 x, 이름은 무조건 클래스 이름과 동일


    // public 사람(){} // 기본생성자. 안만들면 자바가 만들어줌
    // 다만, 하단처럼 내가 생성자를 의도적으로 만들면 자바는 기본생성자를 더이상 자동 생성해주지 않는다.
    public 사람(int 나이, String 이름, String 거주지){
        System.out.println("사람이 한명 만들어집니다.");
        this.나이 = 나이;
        this.이름 = 이름;
        this.거주지 = 거주지;
    }

    public void 초기화(){
        나이 = 20;
        이름 = "홍길동";
        거주지 = "서울";
    }

    // 함수의 지역변수와 객체의 인스턴스 변수는 동일한 이름으로 존재 가능
    // 나이 겹치는데도 가능함
    public void 초기화1(int 나이, String 이름, String 거주지){
        //this는 객체를 가르킨다.
        this.나이 = 나이;
        this.이름 = 이름;
        this.거주지 = 거주지;
    }

    public void 자기소개() {
        System.out.println("안녕하세요 저는 " + 나이 + "살 " + 이름 + "입니다.");
    }
    public void 초기화2() {
        나이 = 30;
        이름 = "홍길순";
        거주지 = "부산";
    }
}